
#include <iostream>
#include <bits/stdc++.h>
#include <algorithm>
#include <cmath>
#include <fstream>
#include "patientfile.h";

using namespace std;
int user_input;
void Design(){

		cout << "Welcome To The Hospital System"<<endl;
		cout << "Enter Your Choice"<<endl;
		cout <<"1) Add new patient"<<endl;
		cout <<"2) Print all patients"<<endl;
		cout <<"3) Get next patient"<<endl;
		cout <<"4) Exit"<<endl;
		cout << endl;

}
//fill
map<int , int> data_patients;
void fill(){
	for (int i = 0 ; i < 20 ; i ++ ){
		data_patients[i + 1] = 0 ;
	}
}

//Add Patient
deque<deque<pair<string , string >>> user_Data(100);
void Add_Patient(){
	while(true){
	cout << "Enter Specialization[1:20] , Name , Status 1 or 0 "<<endl;//0 regular  1 urgent
	int num ; cin >> num;
	string name , status ; cin >> name >> status;
	bool f = 0 , f2 = 0 ;
	if (num <= 0 || num >20) f2 = 1 ;
	if (status != "1" and status != "0") f = 1;
	if (cin.fail() || f == 1 || f2 == 1  ){
		cout << "Wrong answer please enter valid data"<<endl;
		cin.clear();
		cin.ignore(1000000 , '\n');
	}

	else {
	for (auto i : data_patients){
		if (i.first == num){
			if (check_accept(user_Data[num].size())){
				cout << "Sorry We can't accept more patients for this specialization"<<endl;
				cout << endl;
				break;
			}else{
				data_patients[num] ++ ;
				if (status == "1"){
					//user_Data.push_front({num , {name , status}});
					user_Data[num].push_front({name , "urgent"});
					data_patients[num]++;
				}else{
					//user_Data.push_back({num , {name , status}});
					user_Data[num].push_back({name , "regular"});
					data_patients[num]++;
				  }
				}
			}
		}
	}
	break;
}
	Design();
}

//print All Patients
void print_All_Patients(){
	bool f = 0 ;
	for (int i = 1 ; i <= 20 ; i ++){
		if (user_Data[i].size() > 0){
			cout << "There are " << user_Data[i].size() << " patients in specialization " << i << endl;
			for (auto j : user_Data[i]){
				cout << j.first << " " << j.second << endl;
				f = 1;
			}
		}

	}
	if (f==0) cout << "There are not patients"<<endl;
	Design();
}

//Get_Next_Patient
void Get_Next_Patient(){
	while(true){
	cout << "Enter Specialization"<<endl;
	int input ; cin >> input ;
	if (cin.fail()){
		cout << "Wrong answer please enter valid data"<<endl;
		cin.clear();
		cin.ignore(1000000 , '\n');
	}else {

		if (user_Data[input].size() == 0){
			cout << "There are not patients at the moment.Have rest Dr"<<endl;
		}else {
			cout << user_Data[input].front().first << " " << " go with the the doctor"<<endl;
			user_Data[input].pop_front();
		}
		break;
	}

	  }
	cout << endl;
	Design();
}

int main() {


//fill data
fill();

Design();
 while(true){
	 cin >> user_input;
	if (cin.fail()){
		cout << "Wrong answer please enter valid data"<<endl;
		cin.clear();
		cin.ignore(1000000 , '\n');
		Design();
	}
	else {
	if (user_input == 1){
		Add_Patient();
	}
	else if (user_input == 2){
		print_All_Patients();
	}

	else if (user_input == 3){
			Get_Next_Patient();
	}
	else {

		break;
	     }
	  }
}


	return 0;
}
